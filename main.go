package main
import (
  "flag"
  "os"
  "fmt"
  "strings"
  "strconv"
  "bytes"
  "github.com/parnurzeal/gorequest"
  "encoding/json"
  "appstore-hipchat-integration/models"
  "github.com/tbruyelle/hipchat-go/hipchat"
  "github.com/eknkc/amber"
)

var (
  token  = flag.String("token", "", "The HipChat AuthToken")
  roomId = flag.String("room", "", "The HipChat room id")
  test   = flag.Bool("t", false, "Enable auth_test parameter")
)
type Review struct {
  Title string
  Author string
  Stars []string
  Message string
}

func main() {
  flag.Parse()
  if *token == "" || *roomId == "" {
    flag.PrintDefaults()
    return
  }
  hipchat.AuthTest = *test

  url := "https://itunes.apple.com/au/rss/customerreviews/id=1029783189/page=1/json"
  resp, body, httperr := gorequest.New().Get(url).End()
  if httperr == nil {
    fmt.Println(resp.Status)
    feed := models.AutoGenerated{}
    json.Unmarshal([]byte(body), &feed)

    compiler := amber.New()
    // Parse the input file
    err := compiler.ParseFile("./review.amber")
    if (err != nil) {
      fmt.Println("Unable to find review.amber")
      return
    }
    // Compile input file to Go template
    tpl, err := compiler.Compile()
    if (err != nil) {
      return
    }

    star := "https://s.mzstatic.com/htmlResources/B69E/web-storefront/images/star@2x.png"
    i, err := strconv.Atoi(feed.Feed.Entry[1].ImRating.Label)
    if err == nil {
      var slice = make([]string, i)
      for i := range slice {
        slice[i] = star
      }
      review := Review{Title: feed.Feed.Entry[1].Title.Label, Author: feed.Feed.Entry[1].Author.Name.Label, Stars: slice, Message: feed.Feed.Entry[1].Content.Label}
      // Check built in html/template documentation for further details
      var buf bytes.Buffer
      tpl.Execute(&buf, review)
      notifRq := &hipchat.NotificationRequest{Message: strings.TrimSpace(buf.String())}
      c := hipchat.NewClient(*token)
      resp, err := c.Room.Notification(*roomId, notifRq)
      if err != nil {
        fmt.Fprintf(os.Stderr, "Error during room notification %q\n", err)
        fmt.Fprintf(os.Stderr, "Server returns %+v\n", resp)
        return
      }

      if hipchat.AuthTest {
        _, ok := hipchat.AuthTestResponse["success"]
        fmt.Println("Authentification succeed :", ok)
      } else {
        fmt.Println("Sent App Reviews")
      } 
    }
  }
}
